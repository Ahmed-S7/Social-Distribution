# Generated by Django 5.2.4 on 2025-07-24 22:09

import django.db.models.deletion
import uuid
import wiki.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RemoteNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('url', models.URLField(unique=True)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RemotePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('origin', models.URLField()),
                ('author', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('received_at', models.DateTimeField(default=wiki.models.get_mst_time)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('type', models.CharField(default='author')),
                ('id', models.URLField(primary_key=True, serialize=False, unique=True)),
                ('host', models.URLField(default='http://127.0.0.1:8000/')),
                ('displayName', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('github', models.URLField(blank=True, default=None, null=True)),
                ('serial', models.UUIDField(default=uuid.uuid4, null=True, unique=True)),
                ('profileImage', models.URLField(blank=True, null=True)),
                ('web', models.URLField(blank=True, default=None)),
                ('is_local', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('origin_url', models.URLField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('id', models.URLField(primary_key=True, serialize=False, unique=True)),
                ('serial', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('FRIENDS', 'Friends Only'), ('UNLISTED', 'Unlisted'), ('DELETED', 'Deleted')], default='PUBLIC', max_length=10)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('contentType', models.CharField(default='text/plain', max_length=50)),
                ('web', models.URLField(blank=True, default=None, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='wiki.author')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('contentType', models.CharField(default='text/plain', max_length=50)),
                ('web', models.URLField(blank=True, default=None, null=True)),
                ('is_local', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.author')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='wiki.entry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InboxItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('Follow', 'follow'), ('like', 'Like'), ('comment', 'Comment'), ('entry', 'Entry'), ('author', 'Author')], max_length=20)),
                ('body', models.JSONField()),
                ('created_at', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inboxItems', to='wiki.author')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('content', models.TextField()),
                ('updated', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.author')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorFollowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('date_followed', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='wiki.author')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='wiki.author')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('follower', 'following'), name='unique_active_following')],
            },
        ),
        migrations.CreateModel(
            name='AuthorFriend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('friended_at', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('friended', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_b', to='wiki.author')),
                ('friending', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_a', to='wiki.author')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('friending', 'friended'), name='unique_active_friendship')],
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('is_local', models.BooleanField(default=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='wiki.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.author')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('comment', 'user'), name='unique_comment_like')],
            },
        ),
        migrations.CreateModel(
            name='FollowRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('type', models.CharField(default='follow')),
                ('summary', models.CharField(default='You have recieved a follow request!')),
                ('state', models.CharField(choices=[('requesting', 'Requesting'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='requesting', max_length=15)),
                ('created_at', models.DateTimeField(default=wiki.models.get_mst_time)),
                ('requested_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_requests', to='wiki.author')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requesting', to='wiki.author')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('requester', 'requested_account', 'state'), name='unique_active_follow_request')],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_local', models.BooleanField(default=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='wiki.entry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wiki.author')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('entry', 'user'), name='unique_active_like')],
            },
        ),
    ]
